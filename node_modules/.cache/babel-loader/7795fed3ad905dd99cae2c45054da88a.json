{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Navbar from \"./components/Navbar\"; // class App extends Component {\n//   // Setting this.state.friends to the friends json array\n//   state = {\n//     friends,\n//     clickedFriends: [],\n//     topscore:0,\n//     score:0\n//   };\n//   friendClick = id => {\n//    //shuffle\n//    friends.sort(() => Math.random() - 0.5);\n//     // Set this.state.friends equal to the new friends array\n//     //globle enviornment that saves all the updates\n//     this.setState({ friends });\n//   };\n//   // Map over this.state.friends and render a FriendCard component for each friend object\n//   render() {\n//     return (\n//       <Wrapper>\n//         <Navbar> </Navbar>\n//         <Title>Pokémon-Clicky-Game (Characters List)</Title>\n//         {this.state.friends.map(friend => (\n//           <FriendCard\n//           removeFriend={this.removeFriend}\n//             id={friend.id}\n//             key={friend.id}\n//             name={friend.name}\n//             image={friend.image}\n//           />\n//         ))}\n//       </Wrapper>\n//     );\n//   }\n// }\n// export default App;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      friends: friends,\n      clickedFriends: [],\n      highScore: 0\n    };\n\n    _this.friendClick = function (id) {\n      var friendsFound = _this.state.clickedFriends.filter(function (friend) {\n        return friend === id;\n      });\n\n      var highScore = _this.state.highScore;\n\n      if (friendsFound.length === 0) {\n        var newClickedFriends = _this.state.clickedFriends;\n        console.log(\"state clicked friends: \".concat(_this.state.clickedFriends));\n        newClickedFriends = _this.state.clickedFriends.concat(id);\n        console.log(\"after push to a different var, state clicked friends: \".concat(_this.state.clickedFriends));\n        console.log(\"newClickedFriends: \".concat(newClickedFriends));\n\n        if (newClickedFriends.length > highScore) {\n          highScore = newClickedFriends.length;\n        }\n\n        _this.setState({\n          clickedFriends: newClickedFriends,\n          highScore: highScore\n        });\n      } else {\n        _this.setState({\n          clickedFriends: []\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["c:\\Users\\sahme\\working\\clicky-game-pok-mon-edition-\\client\\src\\App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","Navbar","App","state","clickedFriends","highScore","friendClick","id","friendsFound","filter","friend","length","newClickedFriends","console","log","concat","setState"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;;IAMMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNH,MAAAA,OAAO,EAAPA,OADM;AAENI,MAAAA,cAAc,EAAE,EAFV;AAGNC,MAAAA,SAAS,EAAC;AAHJ,K;;UAORC,W,GAAc,UAAAC,EAAE,EAAI;AAClB,UAAMC,YAAY,GAAG,MAAKL,KAAL,CAAWC,cAAX,CAA0BK,MAA1B,CAAiC,UAAAC,MAAM;AAAA,eAAIA,MAAM,KAAKH,EAAf;AAAA,OAAvC,CAArB;;AAEE,UAAIF,SAAS,GAAG,MAAKF,KAAL,CAAWE,SAA3B;;AACA,UAAGG,YAAY,CAACG,MAAb,KAAuB,CAA1B,EAA6B;AAC3B,YAAIC,iBAAiB,GAAG,MAAKT,KAAL,CAAWC,cAAnC;AACAS,QAAAA,OAAO,CAACC,GAAR,kCAAsC,MAAKX,KAAL,CAAWC,cAAjD;AACAQ,QAAAA,iBAAiB,GAAG,MAAKT,KAAL,CAAWC,cAAX,CAA0BW,MAA1B,CAAiCR,EAAjC,CAApB;AACAM,QAAAA,OAAO,CAACC,GAAR,iEAAqE,MAAKX,KAAL,CAAWC,cAAhF;AACAS,QAAAA,OAAO,CAACC,GAAR,8BAAkCF,iBAAlC;;AACA,YAAGA,iBAAiB,CAACD,MAAlB,GAA2BN,SAA9B,EAAyC;AACvCA,UAAAA,SAAS,GAAGO,iBAAiB,CAACD,MAA9B;AACD;;AAED,cAAKK,QAAL,CAAc;AAACZ,UAAAA,cAAc,EAAEQ,iBAAjB;AAAoCP,UAAAA,SAAS,EAAEA;AAA/C,SAAd;AACC,OAXH,MAWS;AACL,cAAKW,QAAL,CAAc;AACZZ,UAAAA,cAAc,EAAC;AADH,SAAd;AAGD;AAER,K;;;;;;EA9BiBR,S;;AAkClB,eAAeM,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport FriendCard from \"./components/FriendCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport friends from \"./friends.json\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\n// class App extends Component {\r\n//   // Setting this.state.friends to the friends json array\r\n//   state = {\r\n//     friends,\r\n//     clickedFriends: [],\r\n//     topscore:0,\r\n//     score:0\r\n\r\n//   };\r\n\r\n//   friendClick = id => {\r\n//    //shuffle\r\n//    friends.sort(() => Math.random() - 0.5);\r\n//     // Set this.state.friends equal to the new friends array\r\n//     //globle enviornment that saves all the updates\r\n//     this.setState({ friends });\r\n//   };\r\n\r\n//   // Map over this.state.friends and render a FriendCard component for each friend object\r\n//   render() {\r\n//     return (\r\n//       <Wrapper>\r\n//         <Navbar> </Navbar>\r\n//         <Title>Pokémon-Clicky-Game (Characters List)</Title>\r\n//         {this.state.friends.map(friend => (\r\n//           <FriendCard\r\n//           removeFriend={this.removeFriend}\r\n//             id={friend.id}\r\n//             key={friend.id}\r\n//             name={friend.name}\r\n//             image={friend.image}\r\n            \r\n//           />\r\n//         ))}\r\n        \r\n//       </Wrapper>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n  // Setting this.state.friends to the friends json array\r\n  state = {\r\n    friends,\r\n    clickedFriends: [],\r\n    highScore:0\r\n\r\n  };\r\n\r\n  friendClick = id => {\r\n    const friendsFound = this.state.clickedFriends.filter(friend => friend === id);\r\n\r\n      let highScore = this.state.highScore;\r\n      if(friendsFound.length ===0) {\r\n        let newClickedFriends = this.state.clickedFriends;\r\n        console.log(`state clicked friends: ${this.state.clickedFriends}`);\r\n        newClickedFriends = this.state.clickedFriends.concat(id);\r\n        console.log(`after push to a different var, state clicked friends: ${this.state.clickedFriends}`);\r\n        console.log(`newClickedFriends: ${newClickedFriends}`);\r\n        if(newClickedFriends.length > highScore) {\r\n          highScore = newClickedFriends.length;\r\n        }\r\n\r\n        this.setState({clickedFriends: newClickedFriends, highScore: highScore});\r\n        } else {\r\n          this.setState({\r\n            clickedFriends:[]\r\n          })\r\n        }\r\n        \r\n}\r\n   \r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}