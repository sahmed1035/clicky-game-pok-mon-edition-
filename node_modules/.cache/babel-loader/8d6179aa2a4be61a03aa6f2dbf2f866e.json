{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Navbar from \"./components/Navbar\";\nvar score = 0;\nvar topscore = 0;\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      friends: friends,\n      topscore: 0,\n      score: 0\n    };\n\n    _this.shuffleCards = function (id) {\n      var friendClick = friends.filter(function (friend) {\n        return friend.id === id;\n      }); // already clicked\n\n      if (friendClick[i].clicked) {\n        score = 0; // the value of all the cards is reinitialized to false\n\n        for (var _i = 0; _i < friends.length; _i++) {\n          friends[_i].clicked = false;\n        }\n\n        _this.setState({\n          friends: friends,\n          score: _this.state.score\n        });\n      } else {\n        friendClick[0].clicked = true;\n        score++;\n        friends.sort(function () {\n          return Math.random() - 0.5;\n        });\n\n        _this.setState({\n          friends: friends,\n          score: _this.state.score + 1\n        }); //topscore\n\n\n        if (score > topscore) {\n          topscore = score;\n\n          _this.setState({\n            topscore: topscore\n          });\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // friendClick = id => {\n    //  //shuffle\n    //  friends.sort(() => Math.random() - 0.5);\n    //   // Set this.state.friends equal to the new friends array\n    //   //globle enviornment that saves all the updates\n    //   this.setState({ friends });\n    // };\n    // Map over this.state.friends and render a FriendCard component for each friend object\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" \"), React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Pok\\xE9mon-Clicky-Game (Characters List)\"), this.state.friends.map(function (friend) {\n        return React.createElement(FriendCard, {\n          shuffleCards: _this2.shuffleCards,\n          id: friend.id,\n          key: friend.id,\n          name: friend.name,\n          image: friend.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["c:\\Users\\sahme\\working\\clicky-game-pok-mon-edition-\\client\\src\\App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","Navbar","score","topscore","App","state","shuffleCards","id","friendClick","filter","friend","i","clicked","length","setState","sort","Math","random","map","name","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,IAAIC,KAAK,GAAG,CAAZ;AACA,IAAIC,QAAQ,GAAG,CAAf;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNL,MAAAA,OAAO,EAAPA,OADM;AAENG,MAAAA,QAAQ,EAAC,CAFH;AAGND,MAAAA,KAAK,EAAC;AAHA,K;;UAMRI,Y,GAAe,UAAAC,EAAE,EAAI;AACvB,UAAIC,WAAW,GAAGR,OAAO,CAACS,MAAR,CAAe,UAAAC,MAAM;AAAA,eAAIA,MAAM,CAACH,EAAP,KAAcA,EAAlB;AAAA,OAArB,CAAlB,CADuB,CAGvB;;AACA,UAAIC,WAAW,CAACG,CAAD,CAAX,CAAeC,OAAnB,EAA4B;AAC1BV,QAAAA,KAAK,GAAG,CAAR,CAD0B,CAG1B;;AACA,aAAK,IAAIS,EAAC,GAAC,CAAX,EAAcA,EAAC,GAACX,OAAO,CAACa,MAAxB,EAAgCF,EAAC,EAAjC,EAAqC;AACnCX,UAAAA,OAAO,CAACW,EAAD,CAAP,CAAWC,OAAX,GAAqB,KAArB;AACD;;AACD,cAAKE,QAAL,CAAc;AAAEd,UAAAA,OAAO,EAAPA,OAAF;AAAWE,UAAAA,KAAK,EAAE,MAAKG,KAAL,CAAWH;AAA7B,SAAd;AACD,OARD,MAUK;AACHM,QAAAA,WAAW,CAAC,CAAD,CAAX,CAAeI,OAAf,GAAyB,IAAzB;AACAV,QAAAA,KAAK;AAELF,QAAAA,OAAO,CAACe,IAAR,CAAa;AAAA,iBAAMC,IAAI,CAACC,MAAL,KAAe,GAArB;AAAA,SAAb;;AACA,cAAKH,QAAL,CAAc;AAAEd,UAAAA,OAAO,EAAPA,OAAF;AAAWE,UAAAA,KAAK,EAAE,MAAKG,KAAL,CAAWH,KAAX,GAAkB;AAApC,SAAd,EALG,CAOH;;;AACA,YAAIA,KAAK,GAAGC,QAAZ,EAAsB;AACpBA,UAAAA,QAAQ,GAAGD,KAAX;;AACA,gBAAKY,QAAL,CAAc;AAACX,YAAAA,QAAQ,EAARA;AAAD,WAAd;AACD;AACF;AAEE,K;;;;;;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;6BACS;AAAA;;AACP,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAFF,EAGG,KAAKE,KAAL,CAAWL,OAAX,CAAmBkB,GAAnB,CAAuB,UAAAR,MAAM;AAAA,eAC5B,oBAAC,UAAD;AACA,UAAA,YAAY,EAAE,MAAI,CAACJ,YADnB;AAEE,UAAA,EAAE,EAAEI,MAAM,CAACH,EAFb;AAGE,UAAA,GAAG,EAAEG,MAAM,CAACH,EAHd;AAIE,UAAA,IAAI,EAAEG,MAAM,CAACS,IAJf;AAKE,UAAA,KAAK,EAAET,MAAM,CAACU,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAA7B,CAHH,CADF;AAeD;;;;EA/DexB,S;;AAkElB,eAAeQ,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport FriendCard from \"./components/FriendCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport friends from \"./friends.json\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nlet score = 0;\r\nlet topscore = 0;\r\n\r\nclass App extends Component {\r\n  // Setting this.state.friends to the friends json array\r\n  state = {\r\n    friends,\r\n    topscore:0,\r\n    score:0\r\n  };\r\n\r\n  shuffleCards = id => {\r\nlet friendClick = friends.filter(friend => friend.id === id);\r\n\r\n// already clicked\r\nif (friendClick[i].clicked) {\r\n  score = 0;\r\n\r\n  // the value of all the cards is reinitialized to false\r\n  for (let i=0; i<friends.length; i++) {\r\n    friends[i].clicked = false;\r\n  }\r\n  this.setState({ friends, score: this.state.score});\r\n}\r\n\r\nelse {\r\n  friendClick[0].clicked = true;\r\n  score ++;\r\n  \r\n  friends.sort(() => Math.random() -0.5);\r\n  this.setState({ friends, score: this.state.score +1});\r\n\r\n  //topscore\r\n  if (score > topscore) {\r\n    topscore = score;\r\n    this.setState({topscore});\r\n  }\r\n}\r\n\r\n  };\r\n\r\n  // friendClick = id => {\r\n  //  //shuffle\r\n  //  friends.sort(() => Math.random() - 0.5);\r\n  //   // Set this.state.friends equal to the new friends array\r\n  //   //globle enviornment that saves all the updates\r\n  //   this.setState({ friends });\r\n  // };\r\n\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Navbar> </Navbar>\r\n        <Title>Pok√©mon-Clicky-Game (Characters List)</Title>\r\n        {this.state.friends.map(friend => (\r\n          <FriendCard\r\n          shuffleCards={this.shuffleCards}\r\n            id={friend.id}\r\n            key={friend.id}\r\n            name={friend.name}\r\n            image={friend.image}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}