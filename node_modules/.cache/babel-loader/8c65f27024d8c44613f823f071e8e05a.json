{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Navbar from \"./components/Navbar\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      friends: friends,\n      topscore: 0,\n      score: 0\n    };\n\n    _this.shuffleCards = function (id) {\n      var friends = _this.state.friends;\n      var friendClick = friends.filter(function (friend) {\n        return friend.id === id;\n      }); // already clicked clicked=true\n\n      if (friendClick.clicked) {\n        _this.setState({\n          score: 0\n        }); // the value of all the cards is reinitialized to false\n\n\n        for (var i = 0; i < friends.length; i++) {\n          friends[i].clicked = false;\n        } // this.setState({ friends, score });\n\n      } else {\n        friendClick.clicked = true;\n\n        _this.setState({\n          score: score++\n        });\n\n        friends.sort(function () {\n          return Math.random() - 0.5;\n        });\n\n        _this.setState({\n          friends: friends,\n          score: score\n        }); //topscore\n\n\n        if (score > topscore) {\n          topscore = score;\n\n          _this.setState({\n            topscore: topscore\n          });\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // Map over this.state.friends and render a FriendCard component for each friend object\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        score: this.state.score,\n        topscore: this.state.topscore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Pok\\xE9mon-Clicky-Game (Characters List)\"), this.state.friends.map(function (friend) {\n        return React.createElement(FriendCard, {\n          shuffleCards: _this2.shuffleCards,\n          id: friend.id,\n          key: friend.id,\n          name: friend.name,\n          image: friend.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["c:\\Users\\sahme\\working\\clicky-game-pok-mon-edition-\\client\\src\\App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","Navbar","App","state","topscore","score","shuffleCards","id","friendClick","filter","friend","clicked","setState","i","length","sort","Math","random","map","name","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;IAGMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNH,MAAAA,OAAO,EAAPA,OADM;AAENI,MAAAA,QAAQ,EAAE,CAFJ;AAGNC,MAAAA,KAAK,EAAE;AAHD,K;;UAMRC,Y,GAAe,UAAAC,EAAE,EAAI;AACnB,UAAIP,OAAO,GAAG,MAAKG,KAAL,CAAWH,OAAzB;AACA,UAAIQ,WAAW,GAAGR,OAAO,CAACS,MAAR,CAAe,UAAAC,MAAM;AAAA,eAAIA,MAAM,CAACH,EAAP,KAAcA,EAAlB;AAAA,OAArB,CAAlB,CAFmB,CAInB;;AACA,UAAIC,WAAW,CAACG,OAAhB,EAAyB;AACvB,cAAKC,QAAL,CAAc;AAACP,UAAAA,KAAK,EAAE;AAAR,SAAd,EADuB,CAGvB;;;AACA,aAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,OAAO,CAACc,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCb,UAAAA,OAAO,CAACa,CAAD,CAAP,CAAWF,OAAX,GAAqB,KAArB;AACD,SANsB,CAOvB;;AACD,OARD,MAUK;AACHH,QAAAA,WAAW,CAACG,OAAZ,GAAsB,IAAtB;;AACA,cAAKC,QAAL,CAAc;AAACP,UAAAA,KAAK,EAAEA,KAAK;AAAb,SAAd;;AAEAL,QAAAA,OAAO,CAACe,IAAR,CAAa;AAAA,iBAAMC,IAAI,CAACC,MAAL,KAAgB,GAAtB;AAAA,SAAb;;AACA,cAAKL,QAAL,CAAc;AAAEZ,UAAAA,OAAO,EAAPA,OAAF;AAAWK,UAAAA,KAAK,EAALA;AAAX,SAAd,EALG,CAOH;;;AACA,YAAIA,KAAK,GAAGD,QAAZ,EAAsB;AACpBA,UAAAA,QAAQ,GAAGC,KAAX;;AACA,gBAAKO,QAAL,CAAc;AAAER,YAAAA,QAAQ,EAARA;AAAF,WAAd;AACD;AACF;AAEF,K;;;;;;;AAED;6BACS;AAAA;;AACP,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACA,QAAA,KAAK,EAAI,KAAKD,KAAL,CAAWE,KADpB;AAEA,QAAA,QAAQ,EAAI,KAAKF,KAAL,CAAWC,QAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDALF,EAMG,KAAKD,KAAL,CAAWH,OAAX,CAAmBkB,GAAnB,CAAuB,UAAAR,MAAM;AAAA,eAC5B,oBAAC,UAAD;AACE,UAAA,YAAY,EAAE,MAAI,CAACJ,YADrB;AAEE,UAAA,EAAE,EAAEI,MAAM,CAACH,EAFb;AAGE,UAAA,GAAG,EAAEG,MAAM,CAACH,EAHd;AAIE,UAAA,IAAI,EAAEG,MAAM,CAACS,IAJf;AAKE,UAAA,KAAK,EAAET,MAAM,CAACU,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAA7B,CANH,CADF;AAkBD;;;;EA3DexB,S;;AA8DlB,eAAeM,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport FriendCard from \"./components/FriendCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport friends from \"./friends.json\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\n\r\nclass App extends Component {\r\n  // Setting this.state.friends to the friends json array\r\n  state = {\r\n    friends,\r\n    topscore: 0,\r\n    score: 0\r\n  };\r\n\r\n  shuffleCards = id => {\r\n    let friends = this.state.friends;\r\n    let friendClick = friends.filter(friend => friend.id === id);\r\n\r\n    // already clicked clicked=true\r\n    if (friendClick.clicked) {\r\n      this.setState({score: 0});\r\n\r\n      // the value of all the cards is reinitialized to false\r\n      for (let i = 0; i < friends.length; i++) {\r\n        friends[i].clicked = false;\r\n      }\r\n      // this.setState({ friends, score });\r\n    }\r\n\r\n    else {\r\n      friendClick.clicked = true;\r\n      this.setState({score: score++});\r\n\r\n      friends.sort(() => Math.random() - 0.5);\r\n      this.setState({ friends, score });\r\n\r\n      //topscore\r\n      if (score > topscore) {\r\n        topscore = score;\r\n        this.setState({ topscore });\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Navbar \r\n        score = {this.state.score}\r\n        topscore = {this.state.topscore}\r\n        /> \r\n        <Title>Pok√©mon-Clicky-Game (Characters List)</Title>\r\n        {this.state.friends.map(friend => (\r\n          <FriendCard\r\n            shuffleCards={this.shuffleCards}\r\n            id={friend.id}\r\n            key={friend.id}\r\n            name={friend.name}\r\n            image={friend.image}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}