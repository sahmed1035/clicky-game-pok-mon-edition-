{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\sahme\\\\working\\\\clicky-game-pok-mon-edition-\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Navbar from \"./components/Navbar\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      friends: friends,\n      topscore: 0,\n      score: 0\n    };\n\n    _this.handleShuffleCards = function (id) {\n      friends.map(function (friendObject) {\n        if (id === friendObject.id) {\n          if (friendObject.clicked === false) {\n            friendObject.clicked = true;\n\n            _this.setState({\n              score: _this.state.score + 1,\n              topscore: _this.state.topscore + 1,\n              friends: friends\n            });\n          } else {\n            _this.setState({\n              score: 0\n            });\n          }\n        }\n\n        return friendObject.clicked;\n      }); //  let friendClick = friends.filter(friend => friend.id === id);\n      //  this.setState({ score: score++ });\n      // // already clicked clicked=trfue\n      // if (friendClick.clicked===false) {\n      //   console.log(friendClick.clicked);\n      //   this.setState({ score: 0 });\n      //   // the value of all the cards is reinitialized to false\n      //   for (let i = 0; i < friends.length; i++) {\n      //     friends.clicked = false;\n      //   }\n      //   this.setState({ friends, score, clicked });\n      // }\n      // else {\n      //   friendClick.clicked = true;\n      //   // this.setState({ score: score++ });\n      //   friends.sort(() => Math.random() - 0.5);\n      //   this.setState({ friends, score, clicked });\n      //   //topscore\n      //   if (score > topscore) {\n      //     topscore = score;\n      //     this.setState({ topscore });\n      //   }\n      // }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // Map over this.state.friends and render a FriendCard component for each friend object\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        score: this.state.score,\n        topscore: this.state.topscore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Pok\\xE9mon-Clicky-Game (Characters List)\"), this.state.friends.map(function (friend) {\n        return React.createElement(FriendCard, {\n          handleShuffleCards: _this2.handleShuffleCards,\n          id: friend.id,\n          key: friend.id,\n          name: friend.name,\n          image: friend.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["c:\\Users\\sahme\\working\\clicky-game-pok-mon-edition-\\client\\src\\App.js"],"names":["React","Component","FriendCard","Wrapper","Title","friends","Navbar","App","state","topscore","score","handleShuffleCards","id","map","friendObject","clicked","setState","friend","name","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;IAIMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNH,MAAAA,OAAO,EAAPA,OADM;AAENI,MAAAA,QAAQ,EAAE,CAFJ;AAGNC,MAAAA,KAAK,EAAE;AAHD,K;;UAMRC,kB,GAAqB,UAAAC,EAAE,EAAI;AAEzBP,MAAAA,OAAO,CAACQ,GAAR,CAAY,UAAAC,YAAY,EAAI;AAE1B,YAAIF,EAAE,KAAKE,YAAY,CAACF,EAAxB,EAA4B;AAC1B,cAAIE,YAAY,CAACC,OAAb,KAAyB,KAA7B,EAAoC;AAClCD,YAAAA,YAAY,CAACC,OAAb,GAAuB,IAAvB;;AACA,kBAAKC,QAAL,CAAc;AAAEN,cAAAA,KAAK,EAAE,MAAKF,KAAL,CAAWE,KAAX,GAAmB,CAA5B;AAA+BD,cAAAA,QAAQ,EAAE,MAAKD,KAAL,CAAWC,QAAX,GAAsB,CAA/D;AAAkEJ,cAAAA,OAAO,EAAPA;AAAlE,aAAd;AAED,WAJD,MAKK;AACH,kBAAKW,QAAL,CAAc;AAACN,cAAAA,KAAK,EAAE;AAAR,aAAd;AAED;AACF;;AAED,eAAQI,YAAY,CAACC,OAArB;AAED,OAhBD,EAFyB,CAoBzB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAED,K;;;;;;;AAED;6BACS;AAAA;;AACP,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE,KADpB;AAEE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,QAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDALF,EAMG,KAAKD,KAAL,CAAWH,OAAX,CAAmBQ,GAAnB,CAAuB,UAAAI,MAAM;AAAA,eAC5B,oBAAC,UAAD;AACE,UAAA,kBAAkB,EAAE,MAAI,CAACN,kBAD3B;AAEE,UAAA,EAAE,EAAEM,MAAM,CAACL,EAFb;AAGE,UAAA,GAAG,EAAEK,MAAM,CAACL,EAHd;AAIE,UAAA,IAAI,EAAEK,MAAM,CAACC,IAJf;AAKE,UAAA,KAAK,EAAED,MAAM,CAACE,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAA7B,CANH,CADF;AAkBD;;;;EA/EelB,S;;AAkFlB,eAAeM,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport FriendCard from \"./components/FriendCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport friends from \"./friends.json\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n  // Setting this.state.friends to the friends json array\r\n  state = {\r\n    friends,\r\n    topscore: 0,\r\n    score: 0\r\n  };\r\n\r\n  handleShuffleCards = id => {\r\n\r\n    friends.map(friendObject => {\r\n\r\n      if (id === friendObject.id) {\r\n        if (friendObject.clicked === false) {\r\n          friendObject.clicked = true;\r\n          this.setState({ score: this.state.score + 1, topscore: this.state.topscore + 1, friends });\r\n     \r\n        }\r\n        else {\r\n          this.setState({score: 0});\r\n         \r\n        }\r\n      }\r\n\r\n      return  friendObject.clicked;\r\n\r\n    });\r\n\r\n    //  let friendClick = friends.filter(friend => friend.id === id);\r\n    //  this.setState({ score: score++ });\r\n    // // already clicked clicked=trfue\r\n    // if (friendClick.clicked===false) {\r\n    //   console.log(friendClick.clicked);\r\n    //   this.setState({ score: 0 });\r\n\r\n    //   // the value of all the cards is reinitialized to false\r\n    //   for (let i = 0; i < friends.length; i++) {\r\n    //     friends.clicked = false;\r\n    //   }\r\n    //   this.setState({ friends, score, clicked });\r\n    // }\r\n\r\n    // else {\r\n    //   friendClick.clicked = true;\r\n    //   // this.setState({ score: score++ });\r\n\r\n    //   friends.sort(() => Math.random() - 0.5);\r\n    //   this.setState({ friends, score, clicked });\r\n\r\n    //   //topscore\r\n    //   if (score > topscore) {\r\n    //     topscore = score;\r\n    //     this.setState({ topscore });\r\n    //   }\r\n\r\n    // }\r\n\r\n  };\r\n\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Navbar\r\n          score={this.state.score}\r\n          topscore={this.state.topscore}\r\n        />\r\n        <Title>Pok√©mon-Clicky-Game (Characters List)</Title>\r\n        {this.state.friends.map(friend => (\r\n          <FriendCard\r\n            handleShuffleCards={this.handleShuffleCards}\r\n            id={friend.id}\r\n            key={friend.id}\r\n            name={friend.name}\r\n            image={friend.image}\r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}